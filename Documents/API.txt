General
	Return status codes
		200: Success
		400: Invalid request
			Return body is JSON {error: error} (See specific API endpoints for specific errors)
		401: Unauthorized
			Return body is JSON {error: "Invalid authorization"}
		500: Server internal error
			Return body is JSON {error: "Internal error"}



Association Register
	PUT /v1/association/:documentStorageID
	//	=> documentStorageID (path)
	//	=> json (body)
	//		{
	//			"name" :String
	//			"fromDocumentType" :String,
	//			"toDocumentType" :String,
	//		}
	//	=> authorization (header) (optional)

Association Update
	PUT /v1/association/:documentStorageID/:name
	//	=> documentStorageID (path)
	//	=> name (path)
	//	=> json (body)
	//		[
	//			{
	//				"action" :"add" or "remove"
	//				"fromID" :String
	//				"toID :String
	//			}
	//		]
	//	=> authorization (header) (optional)

Association Get
	GET /v1/association/:documentStorageID/:name
	//	=> documentStorageID (path)
	//	=> name (path)
	//	=> fromID -or- toID (query) (optional)
	//	=> startIndex (query) (optional, default is 0)
	//	=> count (query) (optional, default is all)
	//	=> fullInfo (query) (optional, default is false)
	//	=> authorization (header) (optional)
	//
	//	<= Content-Range Header
	//	<= json (no fromID nor toID given)
	//		[
	//			{
	//				"fromDocumentID" :String,
	//				"toDocumentID" :String,
	//			},
	//			...
	//		]
	//	<= json (fromID or toID given, fullInfo == 0)
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//			},
	//			...
	//		]
	//	<= json (fromID or toID given, fullInfo == 1)
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//				"active" :0/1,
	//				"creationDate" :String,
	//				"modificationDate" :String,
	//				"json" :{
	//							"key" :Any,
	//							...
	//						},
	//				"attachments":
	//						{
	//							id :
	//								{
	//									"revision" :Int,
	//									"info" :{
	//												"key" :Any,
	//												...
	//											},
	//								},
	//								..
	//						}
	//			},
	//			...
	//		]

Association Get Value
	GET /v1/association/:documentStorageID/:name/:action
	//	=> documentStorageID (path)
	//	=> name (path)
	//	=> action (path)	Currently only "sum"
	//	=> fromID (query)
	//	=> cacheName (query)
	//	=> cachedValueName (query)
	//	=> authorization (header) (optional)
	//
	//	<= HTTP Status 409 if cache is out of date => call endpoint again
	//	<= value

Cache Register
	PUT /v1/cache/:documentStorageID
	//	=> documentStorageID (path)
	//	=> json (body)
	//		{
	//			"name" :String,
	//			"documentType" :String,
	//			"relevantProperties" :[String]
	//			"valueInfos" :[
	//							{
	//								"name" :String,
	//								"valueType" :"integer",
	//								"selector" :String,
	//							},
	//							...
	//				 		   ]
	//	=> authorization (header) (optional)

Collection Register
	PUT /v1/collection/:documentStorageID
	//	=> documentStorageID (path)
	//	=> json (body)
	//		{
	//			"name" :String,
	//			"documentType" :String,
	//			"relevantProperties" :[String],
	//			"isUpToDate" :Int (0 or 1)
	//			"isIncludedSelector" :String,
	//			"isIncludedSelectorInfo" :{
	//											"key" :Any,
	//											...
	//									  },
	//		}
	//	=> authorization (header) (optional)

Collection Get Document Count
	HEAD /v1/collection/:documentStorageID/:name
	//	=> documentStorageID (path)
	//	=> name (path)
	//	=> authorization (header) (optional)
	//
	//	<= HTTP Status 409 if collection is out of date => call endpoint again
	//	<= Content-Range Header

Collection Get
	GET /v1/collection/:documentStorageID/:name
	//	=> documentStorageID (path)
	//	=> name (path)
	//	=> startIndex (query) (optional, default is 0)
	//	=> count (query) (optional, default is all)
	//	=> fullInfo (query) (optional, default is false)
	//	=> authorization (header) (optional)
	//
	//	<= HTTP Status 409 if collection is out of date => call endpoint again
	//	<= Content-Range Header
	//	<= json (fullInfo == 0)
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//			},
	//			...
	//		]
	//	<= json (fullInfo == 1)
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//				"active" :0/1,
	//				"creationDate" :String,
	//				"modificationDate" :String,
	//				"json" :{
	//							"key" :Any,
	//							...
	//						},
	//				"attachments":
	//						{
	//							id :
	//								{
	//									"revision" :Int,
	//									"info" :{
	//												"key" :Any,
	//												...
	//											},
	//								},
	//								..
	//						}
	//			},
	//			...
	//		]

Document Create
	POST /v1/document/:documentStorageID/:type
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> json (body)
	//		[
	//			{
	//				"documentID" :String (optional)
	//				"creationDate" :String (optional)
	//				"modificationDate" :String (optional)
	//				"json" :{
	//							"key" :Any,
	//							...
	//						}
	//			},
	//			...
	//		]
	//	=> authorization (header) (optional)
	//
	//	<= json
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//				"creationDate" :String,
	//				"modificationDate" :String,
	//			},
	//			...
	//		]

Document Get Count
	HEAD /v1/document/:documentStorageID/:type
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> authorization (header) (optional)
	//
	//	<= Content-Range Header

Document Get
	GET /v1/document/:documentStorageID/:type
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//
	//	=> sinceRevision (query)
	//	=> count (query) (optional, default is all)
	//		-or-
	//	=> id (query) (can specify multiple)
	//
	//	=> authorization (header) (optional)
	//
	//	<= Content-Range Header
	//	<= json
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//				"active" :0/1,
	//				"creationDate" :String,
	//				"modificationDate" :String,
	//				"json" :{
	//							"key" :Any,
	//							...
	//						},
	//				"attachments":
	//						{
	//							id :
	//								{
	//									"revision" :Int,
	//									"info" :{
	//												"key" :Any,
	//												...
	//											},
	//								},
	//								..
	//						}
	//			},
	//			...
	//		]

Document Update
	PATCH /v1/document/:documentStorageID/:type
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> json (body)
	//		[
	//			{
	//				"documentID" :String,
	//				"updated" :{				// Optional
	//								"key" :Any,
	//								...
	//						   },
	//				"removed" :[				// Optional
	//								"key",
	//								...
	//						   ],
	//				"active" :0/1,				// Optional
	//			},
	//			...
	//		]
	//	=> authorization (header) (optional)
	//
	//	<= json
	//		[
	//			{
	//				"documentID" :String,
	//				"revision" :Int,
	//				"active" :0/1,
	//				"modificationDate" :String,
	//				"json" :{
	//							"key" :Any,
	//							...
	//						},
	//			},
	//			...
	//		]

Document Attachment Add
	POST /v1/document/:documentStorageID/:documentType/:documentID/attachment
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> documentID (path)
	//	=> json (body)
	//		{
	//			"info" :{
	//						"key" :Any,
	//						...
	//					},
	//			"content" :String (Base64 encoded)
	//		}
	//	=> authorization (header) (optional)
	//
	//	<= json
	//		{
	//			"id" :String,
	//			"revision" :Int
	//		}

Document Attachment Get
	GET /v1/document/:documentStorageID/:documentType/:documentID/attachment/:attachmentID
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> documentID (path)
	//	=> attachmentID (path)
	//	=> authorization (header) (optional)
	//
	//	<= data

Document Attachment Update
	PATCH /v1/document/:documentStorageID/:documentType/:documentID/attachment/:attachmentID
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> documentID (path)
	//	=> attachmentID (path)
	//	=> json (body)
	//		{
	//			"info" :{
	//						"key" :Any,
	//						...
	//					},
	//			"content" :String (Base64 encoded)
	//		}
	//	=> authorization (header) (optional)
	//
	//	<= json
	//		{
	//			"revision" :Int
	//		}

Document Attachment Remove
	DELETE /v1/document/:documentStorageID/:documentType/:documentID/attachment/:attachmentID
	//	=> documentStorageID (path)
	//	=> documentType (path)
	//	=> documentID (path)
	//	=> attachmentID (path)
	//	=> authorization (header) (optional)

Index Register
	PUT /v1/index/:documentStorageID
	//	=> documentStorageID (path)
	//	=> json (body)
	//		{
	//			"name" :String,
	//			"documentType" :String,
	//			"relevantProperties" :[String]
	//			"isUpToDate" :Int (0 or 1)
	//			"keysSelector" :String,
	//			"keysSelectorInfo" :{
	//									"key" :Any,
	//									...
	//							    },
	//		}
	//	=> authorization (header) (optional)

Index Get
	GET /v1/index/:documentStorageID/:name
	//	=> documentStorageID (path)
	//	=> name (path)
	//	=> key (query) (can specify multiple)
	//	=> fullInfo (query) (optional, default is false)
	//	=> authorization (header) (optional)
	//
	//	<= HTTP Status 409 if collection is out of date => call endpoint again
	//	<= json (fullInfo == 0)
	//		{
	//			key: {String (documentID) : Int (revision)},
	//			...
	//		}
	//	<= json (fullInfo == 1)
	//		{
	//			key:
	//				{
	//					"documentID" :String,
	//					"revision" :Int,
	//					"active" :0/1,
	//					"creationDate" :String,
	//					"modificationDate" :String,
	//					"json" :{
	//								"key" :Any,
	//								...
	//							},
	//					"attachments":
	//							{
	//								id :
	//									{
	//										"revision" :Int,
	//										"info" :{
	//													"key" :Any,
	//													...
	//												},
	//									},
	//									..
	//							}
	//				},
	//			...
	//		}

Info Get
	GET /v1/info/:documentStorageID
	//	=> documentStorageID (path)
	//	=> key (query) (can specify multiple)
	//	=> authorization (header) (optional)
	//
	//	<= [
	//		"key" :String
	//		...
	//	   ]

Info Set
	POST /v1/info/:documentStorageID
	//	=> documentStorageID (path)
	//	=> json (body)
	//		[
	//			"key" :String
	//			...
	//		]
	//	=> authorization (header) (optional)

Internal Set
	POST /v1/internal/:documentStorageID
	//	=> documentStorageID (path)
	//	=> json (body)
	//		[
	//			"key" :String
	//			...
	//		]
	//	=> authorization (header) (optional)
